package dbs.db.model;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

/**
 * POJO class for fight table
 */
@Entity
public class Fight {

    //value is generated by db sequence
    @Id
    @SequenceGenerator(name = "fight_id_seq",
            sequenceName = "fight_id_seq",
            allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE,
            generator = "fight_id_seq")
    private long id;

    @Column
    private String place;

    @Column(name = "date_time")
    private java.sql.Timestamp dateTime;

    //joined table for characters that were in this particular fight
    @ManyToMany(cascade = CascadeType.PERSIST)
    @JoinTable(
            name = "character_in_fight",
            joinColumns = @JoinColumn(name = "fight_id", referencedColumnName = "id"),
            inverseJoinColumns = @JoinColumn(name = "character_id", referencedColumnName = "id")
    )
    private List<Character> charactersInFight;

    public String getPlace() {
        return place;
    }

    public void setPlace(final String place) {
        this.place = place;
    }

    public java.sql.Timestamp getDateTime() {
        return dateTime;
    }

    public void setDateTime(java.sql.Timestamp dateTime) {
        this.dateTime = dateTime;
    }

    public long getId() {
        return id;
    }

    public void setId(final long id) {
        this.id = id;
    }

    /**
     * Returns all characters that were in this fight.
     */
    public Collection<Character> getCharactersInFight() {
        return new ArrayList<Character>(charactersInFight);
    }

    /**
     * Add character to this fight.
     */
    public void addCharacterToFight(final Character character) {
        if (charactersInFight == null) {
            charactersInFight = new ArrayList<Character>();
        }

        charactersInFight.add(character);
    }

    /**
     * Removes character from fight. Returns true if character was removed, false otherwise.
     */
    public boolean removeCharacterFromFight(final long characterId) {
        return charactersInFight.removeIf(x -> x.getId() == characterId);
    }


}
